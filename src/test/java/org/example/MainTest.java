package org.example;

import static org.junit.Assert.*;

import org.testng.annotations.Test;

import java.math.BigInteger;
import java.util.ArrayList;

public class MainTest {

  @Test
  public void testMax() {
    ArrayList<BigInteger> arrayList = Main.getDataFromFile("file1.txt");
    BigInteger result = Main._max(arrayList);
    assertEquals(BigInteger.valueOf(100000), result);
  }

  @Test
  public void testMaxFile() {
    ArrayList<BigInteger> arrayList = Main.getDataFromFile("file2.txt");
    BigInteger result = Main._max(arrayList);
    assertEquals(BigInteger.valueOf(100000), result);
  }

  @Test
  public void testMin() {
    ArrayList<BigInteger> arrayList = Main.getDataFromFile("file1.txt");
    BigInteger result = Main._min(arrayList);
    assertEquals(BigInteger.valueOf(-100000), result);
  }

  @Test
  public void testMinFile() {
    ArrayList<BigInteger> arrayList = Main.getDataFromFile("file2.txt");
    BigInteger result = Main._min(arrayList);
    assertEquals(BigInteger.valueOf(-100000), result);
  }

  @Test
  public void testSum() {
    ArrayList<BigInteger> arrayList = Main.getDataFromFile("file1.txt");
    BigInteger result = Main._sum(arrayList);
    assertEquals(BigInteger.valueOf(110980), result);
  }

  @Test
  public void testMult() {
    ArrayList<BigInteger> arrayList = Main.getDataFromFile("file1.txt");
    BigInteger result = Main._mult(arrayList);
    assertEquals(new BigInteger(
            "-896616187520255193413611377023820457342240977934005775155523660768642208957712176595490131195627760438988150483221119684083863597375747085334792218922379091526814107439540147784066225406726252014890447668717953354086698948421998761815830335702993266601605891622695651009544879982081903755302821760577391552896838202530129099876928683279337394781589464077128274775660160497418434065852239766588421971233502160025151839675516874015236155784605123787318990907656411551726519542988290506479492313686389881784750193850530126790153737400451488000142593966779055988351781225705757658098985308298685270914460414341053549309979586013931970685377207624484396057143153662093985972614695599026881157738979710687508241112402735206639085735661666411945151246127724275383291748194026331699066078127713079028052333928112777828774218609396333367294022038551304001824403083214935278905195869058299869901335649646902975825891557376000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),
        result);
  }
}
